version: 2.0

jobs:
  style:
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    steps:
      - checkout
      - run: make style
  unit_tests:
    docker:
      - image: ubuntu:16.04
        environment:
          PYTHONPATH: /opt/intel/computer_vision_sdk/python/python3.5
          LD_LIBRARY_PATH: >-
            /opt/intel/computer_vision_sdk/deployment_tools/inference_engine/external/cldnn/lib
            :/opt/intel/computer_vision_sdk/deployment_toolsinference_engine/external/gna/lib
            :/opt/intel/computer_vision_sdk/deployment_tools/inference_engine/external/mkltiny_lnx/lib
            :/opt/intel/computer_vision_sdk/deployment_tools/inference_engine/lib/ubuntu_16.04/intel64
    environment:
      TEMP_DIR: /tmp/openvino_installer
    steps:
      - checkout
      - run:
          name: Install openvino
          command: >-
            mkdir -p $TEMP_DIR &&
            cd $TEMP_DIR &&
            apt-get update &&
            apt-get install -y --no-install-recommends cpio wget cpio cmake sudo python3-pip python3-venv python3-setuptools virtualenv build-essential &&
            wget -c $OPENVINO_DOWNLOAD_LINK &&
            tar xf l_openvino_toolkit*.tgz &&
            cd l_openvino_toolkit* &&
            sed -i 's/decline/accept/g' silent.cfg &&
            sed -i 's/COMPONENTS=DEFAULTS/COMPONENTS=;intel-ism__noarch;intel-cv-sdk-full-shared__noarch;intel-cv-sdk-full-l-setupvars__noarch;intel-cv-sdk-full-l-model-optimizer__noarch;intel-cv-sdk-full-l-inference-engine__noarch;intel-cv-sdk-full-gfx-install__noarch;intel-cv-sdk-full-shared-pset/g' silent.cfg &&
            ./install.sh -s silent.cfg
      - run:
          name: Install ie-serving-py
          command: make install
      - run:
          name: run unit tests
          command: make unit
      - run:
          name: check coverage
          command: make coverage
  functional_tests_bin:
    machine:
      enabled: true
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Build docker image
          command: wget -c $OPENVINO_DOWNLOAD_LINK && make docker_build_bin
      - run:
          name: Get Google Cloud credentials
          command: echo "${GOOGLE_KEY}" | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - run:
          name: Start functional tests
          command: pyenv global 3.5.2 && make test
  functional_tests_src_ubuntu:
    machine:
      enabled: true
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Build docker image
          command: make docker_build_src_ubuntu
      - run:
          name: Get Google Cloud credentials
          command: echo "${GOOGLE_KEY}" | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - run:
          name: Start functional tests
          command: pyenv global 3.5.2 && make test
  functional_tests_src_intelpython:
    machine:
      enabled: true
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Build docker image
          command: make docker_build_src_intelpython
      - run:
          name: Get Google Cloud credentials
          command: echo "${GOOGLE_KEY}" | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - run:
          name: Start functional tests
          command: pyenv global 3.5.2 && make test
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - unit_tests
      - style
      - functional_tests_bin
      - functional_tests_src_ubuntu
      - functional_tests_src_intelpython
