FROM intelpython/intelpython3_core as DEV
RUN apt-get update && apt-get install -y \
            autoconf \
            automake \
            build-essential \
            ca-certificates \
            curl \
            git \
            gstreamer1.0-plugins-base \
            libavcodec-dev \
            libavformat-dev \
            libboost-regex-dev \
            libcairo2-dev \
            libgfortran3 \
            libglib2.0-dev \
            libgstreamer1.0-0 \
            libgtk2.0-dev \
            libopenblas-dev \
            libpango1.0-dev \
            libpng-dev \
            libssl-dev \
            libswscale-dev \
            libtool \
            libusb-1.0-0-dev \
            pkg-config \
            unzip \
            vim \
            wget

RUN wget https://cmake.org/files/v3.14/cmake-3.14.3.tar.gz && \
    tar -xvzf cmake-3.14.3.tar.gz && \
    cd cmake-3.14.3/  && \
    ./configure && \
    make -j$(nproc) && \
    make install

WORKDIR /opencv

RUN  wget https://github.com/opencv/opencv/archive/4.1.1.tar.gz && tar -xvf 4.1.1.tar.gz
WORKDIR /opencv/opencv-4.1.1/build
RUN cmake -DWITH_QT=OFF -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=OFF -DENABLE_PRECOMPILED_HEADERS=OFF ..
RUN make -j$(nproc)
RUN make install

RUN pip install cython
ARG DLDT_DIR=/dldt-2019_R3
RUN git clone --depth=1 -b 2019_R3 https://github.com/opencv/dldt.git ${DLDT_DIR} && \
    cd ${DLDT_DIR} && git submodule init && git submodule update --recursive && \
    rm -Rf .git && rm -Rf model-optimizer

WORKDIR ${DLDT_DIR}
RUN curl -L https://github.com/intel/mkl-dnn/releases/download/v0.19/mklml_lnx_2019.0.5.20190502.tgz | tar -xz
WORKDIR ${DLDT_DIR}/inference-engine/build

ENV LD_LIBRARY_PATH=/usr/local/lib/
RUN sed -i 's/-Werror -Werror=return-type/-Werror=return-type/g' ../cmake/os_flags.cmake
RUN cmake -DENABLE_PYTHON=ON \
    -DPYTHON_EXECUTABLE=$(which python3)\
    -DPYTHON_LIBRARY=/opt/conda/lib/libpython3.6m.so \
    -DPYTHON_INCLUDE_DIR=/opt/conda/include/python3.6m \
    -DGEMM=MKL \
    -DMKLROOT=${DLDT_DIR}/mklml_lnx_2019.0.5.20190502/ \
    -DENABLE_CLDNN=OFF \
    -DENABLE_MKL_DNN=ON \
    -DCMAKE_BUILD_TYPE=Release ..
RUN make -j$(nproc)

FROM intelpython/intelpython3_core as PROD

RUN apt-get update && apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
            usbutils

COPY --from=DEV /dldt-2019_R3/inference-engine/bin/intel64/Release/lib/*.so /usr/local/lib/
COPY --from=DEV /dldt-2019_R3/inference-engine/bin/intel64/Release/lib/plugins.xml /usr/local/lib/plugins.xml
COPY --from=DEV /dldt-2019_R3/inference-engine/bin/intel64/Release/lib/python_api/python3.6/openvino/ /usr/local/lib/openvino/
COPY --from=DEV /dldt-2019_R3/mklml_lnx_2019.0.5.20190502/lib/lib*.so /usr/local/lib/
COPY --from=DEV /dldt-2019_R3/inference-engine/temp/tbb/lib/* /usr/local/lib/
ENV LD_LIBRARY_PATH=/usr/local/lib
ENV PYTHONPATH=/usr/local/lib

WORKDIR /ie-serving-py

COPY requirements.txt /ie-serving-py/
RUN conda create --name myenv -y
ENV PATH /opt/conda/envs/myenv/bin:$PATH

RUN pip --no-cache-dir install -r requirements.txt

COPY start_server.sh setup.py version /ie-serving-py/
RUN sed -i '/activate/d' start_server.sh
COPY ie_serving /ie-serving-py/ie_serving

RUN pip install .
