FROM clearlinux as build
# Stage for building TF serving API for Python 3.8
RUN swupd bundle-add \
    c-basic \
    curl \
    devpkg-curl \
    git \
    devpkg-libusb \
    deprecated-python2 \
    python3-basic \
    wget \
    patch  \
    diffutils \
    dev-utils \
    unzip \
    which
# Set up Bazel
ENV BAZEL_VERSION 0.24.1
WORKDIR /bazel
RUN curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \
    chmod +x bazel-*.sh && \
    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \
    cd / && \
    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh

RUN git clone -b 2.0.0 https://github.com/tensorflow/serving
WORKDIR serving
RUN pip3 install wheel
RUN mkdir -vp /.cache/bazel/
RUN bazel build --color=yes --curses=yes \
    --verbose_failures \
    tensorflow_serving/tools/pip_package:build_pip_package
RUN bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package /tmp/pip

RUN swupd repair -V 32750 --force

# Build OpenVINO and nGraph (OV dependency) with D_GLIBCXX_USE_CXX11_ABI=0
RUN git clone --recurse-submodules -j4 https://github.com/opencv/dldt --branch 2020.2 --single-branch --depth 1 /openvino

# Use package for centos7 on clearlinux - seems to be working just fine.
RUN sed -i "/^            set(OPENCV_SUFFIX \"centos7\")/a         elseif (\"Clear Linux OS 33060\" STREQUAL \"Clear Linux OS 33060\")\\n            set(OPENCV_SUFFIX \"centos7\")" /openvino/inference-engine/cmake/dependencies.cmake

WORKDIR /openvino/build
RUN pip3 install --no-cache-dir -r /openvino/inference-engine/ie_bridges/python/requirements.txt
RUN cmake -DENABLE_PYTHON=ON -DPYTHON_EXECUTABLE='/usr/bin/python3.8' -DPYTHON_LIBRARY=/usr/lib64/libpython3.8.so -DPYTHON_INCLUDE_DIR=/usr/include/python3.8  -DCMAKE_BUILD_TYPE=Release -DENABLE_SAMPLES=0 -DNGRAPH_USE_CXX_ABI=0 -DCMAKE_CXX_FLAGS=" -D_GLIBCXX_USE_CXX11_ABI=0 -Wno-error=parentheses -Wno-error=redundant-move -Wno-error=pessimizing-move -Wno-error=deprecated-copy -Wno-error=deprecated-declarations " -DCMAKE_C_FLAGS=" -Wno-error=parentheses " ..

RUN make --jobs=$(nproc --all)


FROM clearlinux

RUN swupd update && \
    swupd bundle-add \
    wget \
    python3-basic \
    devpkg-libusb \
    machine-learning-tensorflow --debug && \
    swupd clean

COPY --from=build /openvino/inference-engine/temp/tbb/lib /usr/local/lib/inference-engine
COPY --from=build /openvino/bin/intel64/Release/lib /usr/local/lib/inference-engine

WORKDIR /ie-serving-py

COPY start_server.sh setup.py version requirements_clearlinux.txt /ie-serving-py/
COPY --from=build /tmp/pip/tensorflow_serving_api-*.whl .
RUN virtualenv --system-site-packages -p python3 .venv && \
    . .venv/bin/activate && \
    pip3 install --no-cache-dir tensorflow_serving_api-*.whl && \
    pip3 install --no-cache-dir -r requirements_clearlinux.txt
RUN rm tensorflow_serving_api-*.whl

RUN mkdir -p /opt/models/vehicle_detection_adas/1 && cd /opt/models/vehicle_detection_adas/1 && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/1/vehicle-detection-adas-binary-0001/FP32-INT1/vehicle-detection-adas-binary-0001.bin && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/1/vehicle-detection-adas-binary-0001/FP32-INT1/vehicle-detection-adas-binary-0001.xml && \
    mkdir -p /opt/models/vehicle_attributes/1 && cd /opt/models/vehicle_attributes/1 && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/1/vehicle-attributes-recognition-barrier-0039/FP32/vehicle-attributes-recognition-barrier-0039.bin && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/1/vehicle-attributes-recognition-barrier-0039/FP32/vehicle-attributes-recognition-barrier-0039.xml && \
    mkdir -p /opt/models/person_vehicle_bike_detection/1 && cd /opt/models/person_vehicle_bike_detection/1 && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/3/person-vehicle-bike-detection-crossroad-0078/FP32/person-vehicle-bike-detection-crossroad-0078.bin && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/3/person-vehicle-bike-detection-crossroad-0078/FP32/person-vehicle-bike-detection-crossroad-0078.xml && \
    mkdir -p /opt/models/face_detection_adas/1 && cd /opt/models/face_detection_adas/1 && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/3/face-detection-adas-0001/FP32/face-detection-adas-0001.bin && \
    wget https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/3/face-detection-adas-0001/FP32/face-detection-adas-0001.xml
COPY ie_serving /ie-serving-py/ie_serving
COPY extras/ams_wrapper /ams_wrapper
COPY extras/ams_models /opt/ams_models

RUN . .venv/bin/activate && pip3 --no-cache-dir install . && chmod +x /ams_wrapper/start_ams.py

ENV LD_LIBRARY_PATH=/usr/local/lib/inference-engine:/usr/local/lib
ENV PYTHONPATH=/usr/local/lib:/usr/local/lib/inference-engine/python_api/python3.8:/usr/local/lib/inference-engine/python_api/python3.8/openvino/inference_engine

