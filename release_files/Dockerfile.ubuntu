#
# Copyright (c) 2020-2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

ARG BASE_IMAGE=ubuntu:20.04
FROM $BASE_IMAGE as base_build

SHELL ["/bin/bash", "-xo", "pipefail", "-c"]

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends curl tzdata ca-certificates && \
    rm -rf /var/lib/apt/lists/*

ARG NVIDIA=0

# for VPU
ARG BUILD_DEPENDENCIES="autoconf \
                        automake \
                        build-essential \
                        libtool \
                        unzip"

# hadolint ignore=DL3008
RUN apt-get update && \
    apt-get install -y --no-install-recommends ${BUILD_DEPENDENCIES} && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /opt
RUN curl -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip && \
    unzip v1.0.22.zip && rm -rf v1.0.22.zip

WORKDIR /opt/libusb-1.0.22
RUN ./bootstrap.sh && \
    ./configure --disable-udev --enable-shared && \
    make -j4

WORKDIR /opt/libusb-1.0.22/libusb
# hadolint ignore=DL3003
RUN /bin/mkdir -p '/usr/local/lib' && \
    /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' && \
    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \
    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' && \
    /bin/mkdir -p '/usr/local/lib/pkgconfig' && \
    cd /opt/libusb-1.0.22/ && /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' && \
    rm -Rf /usr/local/lib/*a

WORKDIR /
COPY ovms.tar.xz /
RUN tar -xf ovms.tar.xz
RUN groupadd --gid 5000 ovms && useradd --home-dir /home/ovms --create-home --uid 5000 \
             --gid 5000 --shell /bin/bash --skel /dev/null ovms && \
    chown -R ovms:ovms /ovms

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

FROM $BASE_IMAGE as release
ARG INSTALL_RPMS_FROM_URL=
ENV INSTALL_RPMS_FROM_URL=$INSTALL_RPMS_FROM_URL
ENV HDDL_INSTALL_DIR=/ovms/lib/hddl
ARG INSTALL_DRIVER_VERSION="22.35.24055"
ENV INSTALL_DRIVER_VERSION=$INSTALL_DRIVER_VERSION
ARG GPU=1
ARG NVIDIA=0
ENV GPU=$GPU
ENV DEBIAN_FRONTEND=noninteractive
SHELL ["/bin/bash", "-c"]
WORKDIR /

COPY drivers /drivers
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
# hadolint ignore=DL3003,SC2164
RUN	apt-get update -y ; \
    apt-get install -y curl libpugixml1v5 libtbb2 --no-install-recommends && \
	if [ "$GPU" == "1" ] ; then \
            apt-get update && apt-get install -y ca-certificates libnuma1 ocl-icd-libopencl1 --no-install-recommends && rm -rf /var/lib/apt/lists/* && \
	        case $INSTALL_DRIVER_VERSION in \
                "20.35.17767") \
                        mkdir /tmp/gpu_deps && cd /tmp/gpu_deps ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-gmmlib_20.2.4_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-igc-core_1.0.4756_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-igc-opencl_1.0.4756_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-opencl_20.35.17767_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-ocloc_20.35.17767_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-level-zero-gpu_1.0.17767_amd64.deb ; \
                        dpkg -i intel*.deb && rm -Rf /tmp/gpu_deps ; \
                ;; \
                "21.48.21782") \
                        mkdir /tmp/gpu_deps && cd /tmp/gpu_deps ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/21.48.21782/intel-gmmlib_21.3.3_amd64.deb ; \
                        curl -L -O https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.9441/intel-igc-core_1.0.9441_amd64.deb ; \
                        curl -L -O https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.9441/intel-igc-opencl_1.0.9441_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/21.48.21782/intel-opencl-icd_21.48.21782_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/21.48.21782/intel-level-zero-gpu_1.2.21782_amd64.deb ; \
                        dpkg -i intel*.deb && rm -Rf /tmp/gpu_deps ; \
                ;; \
                "22.10.22597") \
                        mkdir /tmp/gpu_deps && cd /tmp/gpu_deps ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/22.10.22597/intel-gmmlib_22.0.2_amd64.deb ; \
                        curl -L -O https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.10409/intel-igc-core_1.0.10409_amd64.deb ; \
                        curl -L -O https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.10409/intel-igc-opencl_1.0.10409_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/22.10.22597/intel-opencl-icd_22.10.22597_amd64.deb ; \
                        curl -L -O https://github.com/intel/compute-runtime/releases/download/22.10.22597/intel-level-zero-gpu_1.3.22597_amd64.deb ; \
                        dpkg -i intel*.deb && rm -Rf /tmp/gpu_deps ; \
                ;; \
                "22.35.24055") \
                        apt-get update && apt-get install -y --no-install-recommends gpg gpg-agent && \
                        curl https://repositories.intel.com/graphics/intel-graphics.key | gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg && \
                        echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu focal-legacy main' | tee  /etc/apt/sources.list.d/intel.gpu.focal.list && \
                        apt-get update && \
                        apt-get install -y --no-install-recommends \
                        intel-opencl-icd=22.35.24055+i815~u20.04 \
                        intel-level-zero-gpu=1.3.24055+i815~u20.04 \
                        level-zero=1.8.5+i815~u20.04 && \
                        apt-get purge gpg gpg-agent --yes && apt-get --yes autoremove && \
                        apt-get clean ; \
                        rm -rf /var/lib/apt/lists/* && rm -rf /tmp/* ; \
                ;; \
                *) \
                        dpkg -P intel-gmmlib intel-igc-core intel-igc-opencl intel-level-zero-gpu intel-ocloc intel-opencl intel-opencl-icd && \
                        apt-get update && apt-get -y --no-install-recommends install dpkg-dev && rm -rf /var/lib/apt/lists/* && \
                        cd /drivers/${INSTALL_DRIVER_VERSION} && \
                            dpkg-scanpackages .  > Packages && \
                            cd - ; \
                        echo "deb [trusted=yes arch=amd64] file:/drivers/${INSTALL_DRIVER_VERSION} ./" > /etc/apt/sources.list.d/intel-graphics-${INSTALL_DRIVER_VERSION}.list ; \
                        apt-get update && \
                        apt-get install -y --no-install-recommends \
                            intel-opencl-icd \
                            intel-level-zero-gpu level-zero \
                            intel-media-va-driver-non-free libmfx1 && \
                            rm -rf /var/lib/apt/lists/* ; \
                esac ; \
	fi ; \
	apt-get clean ; \
        rm -rf /var/lib/apt/lists/* && rm -rf /tmp/* ; \
        groupadd --gid 5000 ovms ; \
        useradd --home-dir /home/ovms --create-home --uid 5000 --gid 5000 --groups 39,44 --shell /bin/bash --skel /dev/null ovms

RUN apt-get update && apt-get install -y --no-install-recommends libxml2 && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*
COPY --from=base_build /usr/local/lib/ /ovms/lib/
COPY --from=base_build /ovms /ovms

# for HDDL

# for NCS
RUN if [ -f /ovms/lib/hddl/etc/rules.d/97-myriad-usbboot.rules ]; then mkdir -p /etc/udev/rules.d/ && cp /ovms/lib/hddl/etc/rules.d/97-myriad-usbboot.rules /etc/udev/rules.d/ && ldconfig ; fi
# for NVIDIA
RUN if [ "$NVIDIA" == "1" ]; then true ; else exit 0 ; fi ; echo "installing cuda apt package"; \
    apt-get update -y && \
    apt-get install -y --no-install-recommends curl && \
    curl -o /etc/apt/preferences.d/cuda-repository-pin-600 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin ; \
    apt-get update && apt-get install -y --no-install-recommends libcudnn8 libcutensor1 libpng16-16 && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*qg

RUN echo "The source code of added GPL components is stored in https://storage.openvinotoolkit.org/repositories/openvino/ci_dependencies/container_gpl_sources/ubuntu20/" > /ovms/thirdparty-licenses/GPL.txt
USER ovms
ENTRYPOINT ["/ovms/bin/ovms"]
